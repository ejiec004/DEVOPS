A pull request in GitHub is a way for developers to propose changes to a repository's codebase. It's like raising your hand to suggest an improvement or fix for someone else's work.

Here's how it works in simple terms:

1. **Forking the Repository:**
   - Imagine you're reading a book, and you find a typo. Instead of scribbling in the book directly, you make a copy of that page to correct the mistake. Similarly, in GitHub, you "fork" the repository (make a copy) where you want to suggest changes.

2. **Making Changes:**
   - You make the necessary changes to the code in your forked repository. This could be fixing a bug, adding a new feature, or improving the existing code.

3. **Creating a Pull Request (PR):**
   - Once you're happy with your changes, you submit a pull request to the original repository. It's like sending a message to the owner of the book saying, "Hey, I found a mistake, and here's how I fixed it. Can you please consider adding my changes to the main book?"
   - In GitHub, you go to your forked repository, click on the "Pull Request" button, and choose the branch with your changes. You then describe what you've changed and why.

4. **Review and Discussion:**
   - The owner of the original repository (or other collaborators) can review your changes. They may ask questions, suggest improvements, or approve your pull request.
   - It's like having a discussion about your suggested correction in the book. Others might suggest better ways to fix the typo or ask for clarification on your changes.

5. **Merging Changes:**
   - If the owner of the original repository approves your pull request, they can "merge" your changes into the main codebase. It's like accepting your suggested correction and adding it to the official version of the book.

6. **Closing the Pull Request:**
   - Once your changes are merged, the pull request is closed. It's like marking the task as completed in your to-do list.

Pull requests are a collaborative way for developers to work together on projects, review each other's code, and maintain the quality of the codebase. They help ensure that changes are carefully reviewed and tested before being incorporated into the main project.




GitHub
======

1. What is Github/Bitbucket/Gitlab
2. Overview of github
3. Installation of ORS tools
4. creating repositories 
5. pushing repositories to remotely
6. cloning repositories from remote to local
7. Managing tags remotely
8. fetch and pull differences
9. pull request
10.Deleting Repos 
11.Forking Repos
  

Alternatives
1. gitHub
2. Bitbucket
3. Gitlab

	@ is a website to upload repositories online
	@ Provides backup remotely
	@ Provides visual interface to repo
	@ makes user collaboration easier
        @ security
        @ 24/7 support
        @ user friendly
        @ flexibility
        @ microsoft take over


* Through browser you can create, or upload files into github
* git clone https://github.com/tekteacher/Machi.git
* change some data and add, commit
* git push (or) git push origin master

git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/tekteacher/hello.git
git push -u origin master


git remote add origin https://github.com/tekteacher/gitsample.git
git push -u origin master

   						   =========THE END=======
			    TekTeacher +91- 7204143230(WhatsApp/Call),E:- contact@tekteacher.com



